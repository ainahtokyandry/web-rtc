import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { useRef, useState } from "react";

export default function Home() {
	const video = useRef();
	const pause = useRef();
	const play = useRef();
	const [streaming, setStreaming] = useState(false);
	const [paused, setPaused] = useState(false);

	const selectChangeHandler = async (e) => {
		let camera;
		if (e.target.value === "back") {
			camera = "environment";
		} else camera = "user";
		await capture(camera);
	};

	const capture = async (facingMode) => {
		let stream;
		const options = {
			audio: false,
			video: {
				facingMode,
			},
		};

		try {
			if (stream) {
				const tracks = stream.getTracks();
				console.log(tracks);
				tracks.forEach((track) => track.stop());
			}
			stream = await navigator.mediaDevices.getUserMedia(options);
		} catch (e) {
			alert(e);
			return;
		}
		video.current.srcObject = stream;
		await video.current.play();
	};

	const playStream = async (e) => {
		pause.current.classList.remove("d-none");
		e.currentTarget.classList.add("d-none");
		if (!streaming) {
			setStreaming(true);
			console.log(e.currentTarget);
			const supports = navigator.mediaDevices.getSupportedConstraints();
			if (!supports["facingMode"]) {
				alert("Browser Not supported!");
				return;
			}
			await capture("user");
		} else {
			setPaused(false);
		}
	};

	const pauseStream = async () => {
		pause.current.classList.add("d-none");
		play.current.classList.remove("d-none");
	};
	return (
		<div className={styles.container}>
			<Head>
				<title>Playing with web rtc</title>
				<meta name="description" content="Generated by create next app" />
			</Head>

			<main className={styles.main}>
				<div className="display-cover">
					<video autoPlay ref={video} />
					<canvas className="d-none" />

					<div className="video-options">
						<select
							name=""
							id=""
							className="custom-select"
							onChange={selectChangeHandler}
						>
							<option value="">Select camera</option>
							<option value="front">Front</option>
							<option value="back">Back</option>
						</select>
					</div>

					{/*<Image className="screenshot-image d-none" alt="" src={""} />*/}

					<div className="controls">
						<button
							className="btn btn-danger play"
							title="Play"
							onClick={playStream}
							ref={play}
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="60"
								height="60"
								viewBox="0 0 60 60"
							>
								<path d="M45.563,29.174l-22-15A1,1,0,0,0,22,15V45a1,1,0,0,0,1.563.826l22-15a1,1,0,0,0,0-1.652ZM24,43.107V16.893L43.225,30Z" />
								<path d="M30,0A30,30,0,1,0,60,30,30.034,30.034,0,0,0,30,0Zm0,58A28,28,0,1,1,58,30,28.032,28.032,0,0,1,30,58Z" />
							</svg>
						</button>
						<button
							className="btn btn-info pause d-none"
							title="Pause"
							ref={pause}
							onClick={pauseStream}
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="60"
								height="60"
								viewBox="0 0 60 60"
							>
								<path d="M30,0A30,30,0,1,0,60,30,30.034,30.034,0,0,0,30,0Zm0,58A28,28,0,1,1,58,30,28.032,28.032,0,0,1,30,58Z" />
								<path d="M33,46h8V14H33Zm2-30h4V44H35Z" />
								<path d="M19,46h8V14H19Zm2-30h4V44H21Z" />
							</svg>
						</button>
						<button
							className="btn btn-outline-success screenshot d-none"
							title="ScreenShot"
						>
							<i data-feather="image" />
						</button>
					</div>
				</div>
			</main>
		</div>
	);
}
